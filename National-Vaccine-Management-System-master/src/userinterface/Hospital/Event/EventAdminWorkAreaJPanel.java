package userinterface.Hospital.Event;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Events.Events;
import Business.Inventory.RequestedVaccineQty;
import Business.Network.Network;
import Business.Organization.EventOrganisation;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepak_Chandwani; Naman_Bhargava; Sneha_Shree
 */
public class EventAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EventWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    EventOrganisation eventOrganisation;
    Enterprise enterprise;
    Network network;

    public EventAdminWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EventOrganisation eventOrganisation, Enterprise enterprise, EcoSystem business, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.eventOrganisation = eventOrganisation;
        this.enterprise = enterprise;
        this.network = network;

        jTableEventInventory.setVisible(false);
        jButtonManageSubOrg.setVisible(false);
        jButtonManageEmployee.setVisible(false);
        jButtonManageUsers.setVisible(false);
        boolean isEventAvailableForHospital = false;
        for (Events e : network.getEventsDirectory().getEventList()) {
            if (e.getHospitalEnterprise() != null) {
                if (e.getHospitalEnterprise().equals(enterprise)) {
                    jButtonManageSubOrg.setVisible(true);
                    jButtonManageEmployee.setVisible(true);
                    jButtonManageUsers.setVisible(true);
                    isEventAvailableForHospital = true;
                }
            }
        }
        if (!isEventAvailableForHospital) {
            JOptionPane.showMessageDialog(null, "No events are assigned to your hospital");
        }
        populateEvents();
    }

    public void populateEvents() {
        DefaultTableModel dtm = (DefaultTableModel) tblEvents.getModel();
        dtm.setRowCount(0);
        
        for (Events e : network.getEventsDirectory().getEventList()) {
            Date startDate = new Date();
            long different = e.getStartDate().getTime() - startDate.getTime();

            long secondsInMilli = 1000;
            long minutesInMilli = secondsInMilli * 60;
            long hoursInMilli = minutesInMilli * 60;
            long daysInMilli = hoursInMilli * 24;

            long elapsedDays = different / daysInMilli;
            different = different % daysInMilli;

            long elapsedHours = different / hoursInMilli;
            different = different % hoursInMilli;

            long elapsedMinutes = different / minutesInMilli;
            different = different % minutesInMilli;

            System.out.println(elapsedDays);
            System.out.println(elapsedHours);
            System.out.println(elapsedMinutes);

            Object row[] = new Object[5];
            row[0] = e;
            if (elapsedDays < 1) {
                row[1] = elapsedHours + "hrs and " + elapsedMinutes + "mins to go";
            } else {
                row[1] = elapsedDays + "days to go";
            }
            row[2] = e.getHospitalEnterprise();
            row[3] = e.getCapacity();
            row[4] = e.getStatus();
            dtm.addRow(row);

        }
    }

    public void populateVaccineRequestTable(Events e) {
        DefaultTableModel dtm = (DefaultTableModel) jTableEventInventory.getModel();
        dtm.setRowCount(0);
        //for (Events e : network.getEventsDirectory().getEventList()) {
            if (e.getHospitalEnterprise() != null) {
                if (e.getHospitalEnterprise().equals(enterprise)) {
                    for (RequestedVaccineQty qty : e.getVaccineInventoryArrayList()) {
                        Object row[] = new Object[5];
                        row[0] = qty.getVaccine();
                        row[1] = qty.getVaccine().getDisease();
                        row[2] = qty.getVaccine().getQuantity();
                        row[3] = qty;
                        row[4] = qty.getStatus();
                        dtm.addRow(row);
                    }
                }
            }
        //}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEventInventory = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jButtonManageSubOrg = new javax.swing.JButton();
        jButtonManageEmployee = new javax.swing.JButton();
        jButtonManageUsers = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEvents = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setBackground(new java.awt.Color(255, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Show Inventory");
        jButton2.setMaximumSize(new java.awt.Dimension(150, 40));
        jButton2.setMinimumSize(new java.awt.Dimension(150, 40));
        jButton2.setPreferredSize(new java.awt.Dimension(150, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 153, 0));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jTableEventInventory.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTableEventInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine", "Disease", "Quantity", "Object", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEventInventory.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableEventInventory);
        if (jTableEventInventory.getColumnModel().getColumnCount() > 0) {
            jTableEventInventory.getColumnModel().getColumn(3).setMinWidth(0);
            jTableEventInventory.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTableEventInventory.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Event Inventory");

        jButtonManageSubOrg.setBackground(new java.awt.Color(255, 153, 0));
        jButtonManageSubOrg.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButtonManageSubOrg.setForeground(new java.awt.Color(255, 255, 255));
        jButtonManageSubOrg.setText("Manage Sub-Organization");
        jButtonManageSubOrg.setMaximumSize(new java.awt.Dimension(150, 40));
        jButtonManageSubOrg.setMinimumSize(new java.awt.Dimension(150, 40));
        jButtonManageSubOrg.setPreferredSize(new java.awt.Dimension(150, 40));
        jButtonManageSubOrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonManageSubOrgActionPerformed(evt);
            }
        });

        jButtonManageEmployee.setBackground(new java.awt.Color(255, 153, 0));
        jButtonManageEmployee.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButtonManageEmployee.setForeground(new java.awt.Color(255, 255, 255));
        jButtonManageEmployee.setText("Manage Employees");
        jButtonManageEmployee.setMaximumSize(new java.awt.Dimension(150, 40));
        jButtonManageEmployee.setMinimumSize(new java.awt.Dimension(150, 40));
        jButtonManageEmployee.setPreferredSize(new java.awt.Dimension(150, 40));
        jButtonManageEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonManageEmployeeActionPerformed(evt);
            }
        });

        jButtonManageUsers.setBackground(new java.awt.Color(255, 153, 0));
        jButtonManageUsers.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButtonManageUsers.setForeground(new java.awt.Color(255, 255, 255));
        jButtonManageUsers.setText("Manage Users");
        jButtonManageUsers.setMaximumSize(new java.awt.Dimension(150, 40));
        jButtonManageUsers.setMinimumSize(new java.awt.Dimension(150, 40));
        jButtonManageUsers.setPreferredSize(new java.awt.Dimension(150, 40));
        jButtonManageUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonManageUsersActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Event");

        tblEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EventName", "Start Date", "Hospital", "Capacity", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblEvents);

        jButton3.setBackground(new java.awt.Color(255, 153, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("End Event");
        jButton3.setMaximumSize(new java.awt.Dimension(150, 40));
        jButton3.setMinimumSize(new java.awt.Dimension(150, 40));
        jButton3.setPreferredSize(new java.awt.Dimension(150, 40));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonManageSubOrg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonManageEmployee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonManageUsers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonManageSubOrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonManageEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonManageUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(87, 87, 87)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Button Manage Inventory
        if (tblEvents.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Kindly select a row from events table");
        } else {
            Events e = (Events) tblEvents.getValueAt(tblEvents.getSelectedRow(), 0);
            jTableEventInventory.setVisible(true);
            populateVaccineRequestTable(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonManageSubOrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonManageSubOrgActionPerformed
        // TODO add your handling code here:
        ManageEventSubOrganizationJPanel mesojp = new ManageEventSubOrganizationJPanel(userProcessContainer, enterprise.getOrganizationDirectory(), eventOrganisation);
        userProcessContainer.add("ManageEventSubOrganizationJPanel", mesojp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_jButtonManageSubOrgActionPerformed

    private void jButtonManageEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonManageEmployeeActionPerformed
        // TODO add your handling code here:
        ManageEventEmployeeJPanel employeeJPanel = new ManageEventEmployeeJPanel(userProcessContainer, enterprise.getOrganizationDirectory(), eventOrganisation);
        userProcessContainer.add("ManageEventEmployeeJPanel", employeeJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_jButtonManageEmployeeActionPerformed

    private void jButtonManageUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonManageUsersActionPerformed
        // TODO add your handling code here:
        ManageEventUsersJPanel meoujp = new ManageEventUsersJPanel(userProcessContainer, enterprise, eventOrganisation);
        userProcessContainer.add("ManageHospitalUsersJPanel", meoujp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButtonManageUsersActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (tblEvents.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "Kindly select a row from events table");
        } else {
            Events e = (Events) tblEvents.getValueAt(tblEvents.getSelectedRow(), 0);
            Date startDate = e.getStartDate();
            Date endDate = new Date();
            if ((endDate.getDate() - startDate.getDate()) > 0) {
                e.getEventManagement().getVolunteerArrayList().clear();
                e.getEventManagement().getPatientArrayList().clear();
                e.setStatus("Event Completed");
            } else {
                JOptionPane.showMessageDialog(null, "Events is yet to come or going on & can be ended next day");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonManageEmployee;
    private javax.swing.JButton jButtonManageSubOrg;
    private javax.swing.JButton jButtonManageUsers;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableEventInventory;
    private javax.swing.JTable tblEvents;
    // End of variables declaration//GEN-END:variables
}

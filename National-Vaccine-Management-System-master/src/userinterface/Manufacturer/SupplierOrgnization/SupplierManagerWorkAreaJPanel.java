/**
 *
 * @author Deepak_Chandwani; Naman_Bhargava; Sneha_Shree
 */
package userinterface.Manufacturer.SupplierOrgnization;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.SupplierOrganization;
import Business.Supplier.Supplier;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DistributorWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import Business.vaccine.Vaccine;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepak_Chandwani; Naman_Bhargava; Sneha_Shree
 */
public class SupplierManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierManagerWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private SupplierOrganization supplierOrganization;
    private Enterprise enterprise;
    private EcoSystem business;
    private Supplier s;

    public SupplierManagerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, SupplierOrganization supplierOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.supplierOrganization = supplierOrganization;
        this.enterprise = enterprise;
        this.business = business;

        for (Supplier supplier : supplierOrganization.getSupplierList().getSupplierList()) {
            if (account.getEmployee().getName().equals(supplier.getSupplierName())) {
                s = supplier;
                System.out.println("supplier name" + s.getSupplierName());
            }
        }
        System.out.println("busi" + business.getWorkQueue().getWorkRequestList().size());
        if (s.getWorkQueue() == null) {
            WorkQueue w = new WorkQueue();
            s.setWorkQueue(w);
        }

        populateRequestTbl();
        populateCombo();
        populateAvailable();
        
        
        
        txtQty.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE))) {
                    e.consume();
                }
            }
        });
         
    }

    void populateCombo() {
        comboBox.removeAllItems();
        for (Vaccine vaccine : business.getVaccineDirectory().getVaccineList()) {
            comboBox.addItem(vaccine);
        }
    }

    void populateRequestTbl() {
        ArrayList<WorkRequest> emptyObjects = new ArrayList();
        ArrayList<WorkRequest> reqObjects = new ArrayList();
        DefaultTableModel model = (DefaultTableModel) supplierReqJTbl.getModel();
        model.setRowCount(0);

        for (WorkRequest req : s.getWorkQueue().getWorkRequestList()) {
            if (req instanceof DistributorWorkRequest) {
                //      if((((DistributorWorkRequest) req).getSupplier().getSupplierName()).equals(account.getEmployee().getName()))
                {
                    // System.out.println(((DistributorWorkRequest) req).getSupplier().getSupplierName());
                    //System.out.println("---"+account.getEmployee().getName()+"---");
                    Object[] row = new Object[5];
                    row[0] = req.getVaccine().getVaccineName();
                    row[1] = ((DistributorWorkRequest) req).getRequestQuantity();
                    row[2] = req;
                    row[3] = ((DistributorWorkRequest) req).getSupplier();
                    row[4] = req.getSender();
                    model.addRow(row);
                }
            }

        }

    }

    public void populateAvailable() {
        DefaultTableModel model = (DefaultTableModel) inventoryJTbl.getModel();
        model.setRowCount(0);
        for (Vaccine vaccine : s.getSupplierVaccineList().getVaccineList()) {
            Object[] row = new Object[2];
            row[0] = vaccine.getVaccineName();
            row[1] = vaccine.getQuantity();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierReqJTbl = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventoryJTbl = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(204, 0, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Supplier Work Bench");

        supplierReqJTbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        supplierReqJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Qty", "Status", "Receiver", "Sender"
            }
        ));
        jScrollPane1.setViewportView(supplierReqJTbl);

        inventoryJTbl.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        inventoryJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Qty"
            }
        ));
        jScrollPane2.setViewportView(inventoryJTbl);

        jButton1.setBackground(new java.awt.Color(255, 153, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("COMPLETE");
        jButton1.setPreferredSize(new java.awt.Dimension(200, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Supplier Inventory");

        jLabel3.setFont(new java.awt.Font("Zapf Dingbats", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 0));
        jLabel3.setText("Vaccine:");

        comboBox.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        comboBox.setForeground(new java.awt.Color(255, 153, 0));
        comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Zapf Dingbats", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setText("Quantity:");

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtQty.setForeground(new java.awt.Color(255, 153, 0));

        jButton2.setBackground(new java.awt.Color(255, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ADD");
        jButton2.setPreferredSize(new java.awt.Dimension(200, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(260, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(22, 22, 22)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtQty)))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        if (txtQty.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Quantity.");
        } 
        else {

            int quant = Integer.parseInt(txtQty.getText());
            Vaccine v = (Vaccine) comboBox.getSelectedItem();
            int temp = 0;
            for (Vaccine vaccine : s.getSupplierVaccineList().getVaccineList()) {
                if (v.getVaccineName().equals(vaccine.getVaccineName())) {
                    temp = 1;
                    vaccine.setQuantity(vaccine.getQuantity() + quant);
                }
            }

            if (temp == 0) {
                Vaccine vac = s.getSupplierVaccineList().addVaccine();
                vac.setQuantity(quant);
                vac.setDisease(v.getDisease());
                vac.setVaccineName(v.getVaccineName());
            }
            populateAvailable();
            txtQty.setText("");
              JOptionPane.showMessageDialog(null, "Vaccine Added successfully.", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = supplierReqJTbl.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to select the Vaccine", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            DistributorWorkRequest p = (DistributorWorkRequest) supplierReqJTbl.getValueAt(selectedRow, 2);
            if (p.getStatus().equals("Sent to Supplier")) {
                if (s.getSupplierVaccineList().getVaccineList().size() <= 0) {
                    JOptionPane.showMessageDialog(null, "No Stock available.");
                    return;
                }
                boolean vaccineFound = false, isStockSufficient = false;
                for (Vaccine v : s.getSupplierVaccineList().getVaccineList()) {
                    if (p.getVaccine().getVaccineName().equals(v.getVaccineName())) {
                        vaccineFound = true;
                        if (v.getQuantity() - p.getRequestQuantity() < 0) {
                            return;
                        } else {
                            isStockSufficient = true;
                            v.setQuantity(v.getQuantity() - p.getRequestQuantity());
                        }
                    } else {
                        ///JOptionPane.showMessageDialog(null, "No such vaccine found");
                    }
                }
                if (!vaccineFound) {
                    JOptionPane.showMessageDialog(null, "No such vaccine found");
                }

                if (!isStockSufficient) {
                    JOptionPane.showMessageDialog(null, "Not sufficient stock");
                }

                p.setStatus("Complete");
                //p.setIncludedFlag(fals);
                JOptionPane.showMessageDialog(null, "You have successfully completed the request");
                populateRequestTbl();
                populateAvailable();

            }

    }//GEN-LAST:event_jButton1ActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboBox;
    private javax.swing.JTable inventoryJTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable supplierReqJTbl;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables
}

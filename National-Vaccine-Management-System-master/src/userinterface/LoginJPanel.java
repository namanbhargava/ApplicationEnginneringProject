/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.EventOrganisation;
import static Business.Organization.Organization.Type.EventOrganisation;
import Business.SubOrganization.SubOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Deepak Chandwani
 */
public class LoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginJPanel
     */
    private EcoSystem system;
    private Network network;
    JPanel container;

    public LoginJPanel(JPanel container, EcoSystem system, Network network) {
        initComponents();
        this.system = system;
        this.network = network;
        this.container = container;

        ImageIcon imgIcon = new ImageIcon("C:\\Users\\Deepak Chandwani\\Documents\\nvms\\AED_Project_NVMS\\src\\Images\\vm.jpg");
        Image i = imgIcon.getImage();
        Image dimg = i.getScaledInstance(343, 232, Image.SCALE_SMOOTH);
        ImageIcon imgThisImg = new ImageIcon(dimg);
        jLabelImage.setIcon(imgThisImg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelImage = new javax.swing.JLabel();
        userNameJTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 2, true));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 0));
        jLabel3.setText("Password");

        jLabelImage.setMaximumSize(new java.awt.Dimension(343, 132));
        jLabelImage.setMinimumSize(new java.awt.Dimension(343, 132));
        jLabelImage.setPreferredSize(new java.awt.Dimension(343, 132));

        userNameJTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        userNameJTextField.setForeground(new java.awt.Color(255, 153, 0));
        userNameJTextField.setText("sysadmin");

        passwordField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        passwordField.setForeground(new java.awt.Color(255, 153, 0));
        passwordField.setText("Dns@1");

        loginJButton.setBackground(new java.awt.Color(255, 153, 0));
        loginJButton.setFont(new java.awt.Font("Zapf Dingbats", 1, 18)); // NOI18N
        loginJButton.setForeground(new java.awt.Color(255, 255, 255));
        loginJButton.setText("Login");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setText("Username");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField)
                            .addComponent(userNameJTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(loginJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(20, 20, 20)
                .addComponent(loginJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed

        if (userNameJTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Login Name.");
        } else if (passwordField.getPassword().length == 0) {
            JOptionPane.showMessageDialog(null, "Please enter Login Password.");
        } else {

            // Get user name
            String userName = userNameJTextField.getText();
            // Get Password
            char[] passwordCharArray = passwordField.getPassword();
            String password = String.valueOf(passwordCharArray);

            //Step1: Check in the system user account directory if you have the user
            UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
            UserAccount ua = null;
            Enterprise inEnterprise = null;
            Organization inOrganization = null;
            SubOrganization inSubOrganization = null;
            if (userAccount == null) {
                //Step2: Go inside each network to check each enterprise
                for (Network network : system.getNetworkList()) {
                    //Step 2-a: Check against each enterprise
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                        if (userAccount == null) {
                            //Step3: Check against each organization inside that enterprise
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount == null) {
                                    if (organization instanceof EventOrganisation && ((EventOrganisation) organization).getEventSubOrganizationDirectory().getOrganizationList() != null) {
                                        for (SubOrganization subOrganization : ((EventOrganisation) organization).getEventSubOrganizationDirectory().getOrganizationList()) {
                                            userAccount = subOrganization.getUserAccountDirectory().authenticateUser(userName, password);
                                            if (userAccount != null) {
                                                ua = userAccount;
                                                inEnterprise = enterprise;
                                                inOrganization = organization;
                                                this.network = network;
                                                inSubOrganization = subOrganization;
                                                System.out.println("organization instanceof EventOrganisation" + userAccount.getRole());
                                                System.out.println("organization instanceof EventOrganisation" + inEnterprise);
                                                System.out.println("organization instanceof EventOrganisation" + inSubOrganization);
                                                //System.out.println("organization instanceof EventOrganisation");
                                                break;
                                            }
                                        }
                                    } else if (userAccount != null) {
                                        //if () {
                                        inEnterprise = enterprise;
                                        inOrganization = organization;
                                        this.network = network;
                                        System.out.println("organization instanceof EventOrganisation_1" + userAccount.getRole());
                                        break;
                                        //}
                                    }
                                } else if (userAccount != null) {
                                    inEnterprise = enterprise;
                                    inOrganization = organization;
                                    this.network = network;
                                    break;
                                }
                            }
                        } else {
                            inEnterprise = enterprise;
                            this.network = network;
                            break;
                        }
                        if (inOrganization != null) {
                            break;
                        }
                    }
                    if (inEnterprise != null) {
                        break;
                    }
                }
            }

            if (userAccount == null) {
                if (ua == null) {
                    JOptionPane.showMessageDialog(null, "Invalid Credentails!");
                    return;
                } else {
                    CardLayout layout = (CardLayout) container.getLayout();
                    container.add("workArea", ua.getRole().createWorkArea(container, ua, inOrganization, inEnterprise, system, network));
                    layout.next(container);
                }

            } else {
                CardLayout layout = (CardLayout) container.getLayout();
                container.add("workArea", userAccount.getRole().createWorkArea(container, userAccount, inOrganization, inEnterprise, system, network));
                layout.next(container);
            }

        }
    }//GEN-LAST:event_loginJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginJButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
